import{a as h}from"./chunk-N3K24JAS.js";import{g as f}from"./chunk-TWAQUCXP.js";import{t as p,y as i}from"./chunk-IG6CRRGH.js";import{S as u,Y as c}from"./chunk-63XWG6HK.js";import{e as d}from"./chunk-CWTPBX7D.js";var s=class extends Error{};s.prototype.name="InvalidTokenError";function m(r){return decodeURIComponent(atob(r).replace(/(.)/g,(e,o)=>{let t=o.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t="0"+t),"%"+t}))}function w(r){let e=r.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return m(e)}catch{return atob(e)}}function g(r,e){if(typeof r!="string")throw new s("Invalid token specified: must be a string");e||(e={});let o=e.header===!0?0:1,t=r.split(".")[o];if(typeof t!="string")throw new s(`Invalid token specified: missing part #${o+1}`);let a;try{a=w(t)}catch(l){throw new s(`Invalid token specified: invalid base64 for part #${o+1} (${l.message})`)}try{return JSON.parse(a)}catch(l){throw new s(`Invalid token specified: invalid json for part #${o+1} (${l.message})`)}}var n=d(h());var U=(()=>{let e=class e{constructor(){this._HtttpClient=c(p),this._Router=c(f),this.userData={}}setRegisterForm(t){return this._HtttpClient.post(`${i.baseUrl}/api/v1/auth/signup`,t)}setLoginForm(t){return this._HtttpClient.post(`${i.baseUrl}/api/v1/auth/signin`,t)}saveToken(){localStorage.getItem("token")!=null&&(this.userData=g(localStorage.getItem("token")))}logOut(){n.default.fire({title:"Are you sure?",text:"Do you really want to log out?",icon:"warning",showCancelButton:!0,confirmButtonText:"Yes, log out!",cancelButtonText:"No, stay logged in"}).then(t=>{t.isConfirmed?(localStorage.removeItem("token"),this.userData={},this._Router.navigate(["/login"]),n.default.fire("Logged Out!","You have successfully logged out.","success")):t.dismiss===n.default.DismissReason.cancel&&n.default.fire("Cancelled","You are still logged in.","info")})}setEmailForgetPass(t){return this._HtttpClient.post(`${i.baseUrl}/api/v1/auth/forgotPasswords`,t)}setCodeForgetPass(t){return this._HtttpClient.post(`${i.baseUrl}/api/v1/auth/verifyResetCode`,t)}setNewPass(t){return this._HtttpClient.put(`${i.baseUrl}/api/v1/auth/resetPassword`,t)}};e.\u0275fac=function(a){return new(a||e)},e.\u0275prov=u({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})();export{U as a};
